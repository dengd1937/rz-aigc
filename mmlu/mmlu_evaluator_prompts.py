ZERO_SHOT_PROMPT = """问题:{question}\n本题共有四个选项，依次编号为0、1、2、3。
{choices}
只回答答案序号，使用<answer>包裹
"""

ZERO_SHOT_COT_PROMPT = """问题是{question}\n本题共有四个选项，依次编号为0、1、2、3。
{choices}
思考过程使用<think>包裹,回答答案序号，使用<answer>包裹
"""

ONE_SHOT_PROMPT = """问题:{question}\n本题共有四个选项，依次编号为0、1、2、3。
{choices}
只回答答案序号，使用<answer>包裹

【示例】
问题：鲍勃写下一个1到1000之间的数字。玛丽必须通过问鲍勃“是/否”的问题来识别这个号码。玛丽知道鲍勃总是告诉实话。如果玛丽使用最优策略，那么在最坏的情况下，她将在到底有多少个问题结束时确定答案？\n本题共有四个选项，依次编号为0、1、2、3。
["1,000","999","500","10"]
只回答答案序号，使用<answer>包裹
<answer>3</answer>
"""

ONE_SHOT_COT_PROMPT = """问题是{question}\n本题共有四个选项，依次编号为0、1、2、3。
{choices}
思考过程使用<think>包裹,回答答案序号，使用<answer>包裹

【示例】
问题：鲍勃写下一个1到1000之间的数字。玛丽必须通过问鲍勃“是/否”的问题来识别这个号码。玛丽知道鲍勃总是告诉实话。如果玛丽使用最优策略，那么在最坏的情况下，她将在到底有多少个问题结束时确定答案？\n本题共有四个选项，依次编号为0、1、2、3。
["1,000","999","500","10"]
思考过程使用<think>包裹,回答答案序号，使用<answer>包裹
<think>
我们来逐步分析这个问题。

题目：鲍勃写下一个1到1000之间的整数（包含1和1000），玛丽要通过问“是/否”问题来猜出这个数字。她知道鲍勃总是说实话。问的是：如果玛丽使用**最优策略**，在**最坏情况下**，她需要多少个问题才能确定这个数字？

这是一个经典的**信息论**与**二分查找**问题。

---

### 第一步：理解问题本质

- 数字范围是 1 到 1000，共 1000 个可能的数字。
- 每个“是/否”问题最多提供 1 比特的信息。
- 玛丽的目标是通过最少的问题数量，在最坏情况下也能确定这个数字。
- 最优策略就是每次将可能的候选集合尽可能平均地分成两半，即**二分查找**。

---

### 第二步：计算所需最少问题数

我们要找最小的整数 $ n $，使得：

$$
2^n \geq 1000
$$

因为每问一个问题可以将可能性减半，n 次问题最多能区分 $ 2^n $ 种情况。

计算：

- $ 2^9 = 512 $
- $ 2^10 = 1024 $

因为 $ 512 < 1000 $，所以 9 个问题不足以区分 1000 种可能。

但 $ 1024 \geq 1000 $，所以 10 个问题足够。

因此，**最坏情况下，玛丽最多需要 10 个问题**。

---

### 第三步：验证是否可以做到 10 个问题

是的，通过二分查找策略：

- 第一次问：“这个数大于 500 吗？” → 缩小到 500 个数
- 第二次问：“大于 750 吗？” → 缩小到 250
- 依此类推，每次减半

经过 10 次这样的划分，可以唯一确定一个数。

即使最坏情况（比如每次都落在较大的一半），也只需要 10 次。

---

### 第四步：看选项

选项是：
- 0: 1,000
- 1: 999
- 2: 500
- 3: 10

正确答案是 **10**，对应选项编号 **3**

---

### 结论：

虽然有 1000 个数，但通过二分查找，只需 10 个是/否问题即可在最坏情况下确定。
</think>
<answer>3</answer>
"""

THREE_SHOT_PROMPT = """问题:{question}\n本题共有四个选项，依次编号为0、1、2、3。
{choices}
只回答答案序号，使用<answer>包裹

【示例1】
问题：鲍勃写下一个1到1000之间的数字。玛丽必须通过问鲍勃“是/否”的问题来识别这个号码。玛丽知道鲍勃总是告诉实话。如果玛丽使用最优策略，那么在最坏的情况下，她将在到底有多少个问题结束时确定答案？\n本题共有四个选项，依次编号为0、1、2、3。
["1,000","999","500","10"]
只回答答案序号，使用<answer>包裹
<answer>3</answer>

【示例2】
问题：通常不被认为是水中有毒污染物的物质是?\n本题共有四个选项，依次编号为0、1、2、3。
["碳酸","卤代烃","铅","汞"]
思考过程使用<think>包裹,回答答案序号，使用<answer>包裹
<answer>0</answer>

【示例3】
问题：以下哪种排序算法的平均情况和最坏情况运行时间为O（n log n）？\n本题共有四个选项，依次编号为0、1、2、3。
["冒泡排序","插入排序","归并排序","快速排序"]
只回答答案序号，使用<answer>包裹
<answer>2</answer>
"""

THREE_SHOT_COT_PROMPT = """问题是{question}\n本题共有四个选项，依次编号为0、1、2、3。
{choices}
思考过程使用<think>包裹,回答答案序号，使用<answer>包裹

【示例1】
问题：鲍勃写下一个1到1000之间的数字。玛丽必须通过问鲍勃“是/否”的问题来识别这个号码。玛丽知道鲍勃总是告诉实话。如果玛丽使用最优策略，那么在最坏的情况下，她将在到底有多少个问题结束时确定答案？\n本题共有四个选项，依次编号为0、1、2、3。
["1,000","999","500","10"]
思考过程使用<think>包裹,回答答案序号，使用<answer>包裹
<think>
我们来逐步分析这个问题。

题目：鲍勃写下一个1到1000之间的整数（包含1和1000），玛丽要通过问“是/否”问题来猜出这个数字。她知道鲍勃总是说实话。问的是：如果玛丽使用**最优策略**，在**最坏情况下**，她需要多少个问题才能确定这个数字？

这是一个经典的**信息论**与**二分查找**问题。

---

### 第一步：理解问题本质

- 数字范围是 1 到 1000，共 1000 个可能的数字。
- 每个“是/否”问题最多提供 1 比特的信息。
- 玛丽的目标是通过最少的问题数量，在最坏情况下也能确定这个数字。
- 最优策略就是每次将可能的候选集合尽可能平均地分成两半，即**二分查找**。

---

### 第二步：计算所需最少问题数

我们要找最小的整数 $ n $，使得：

$$
2^n \geq 1000
$$

因为每问一个问题可以将可能性减半，n 次问题最多能区分 $ 2^n $ 种情况。

计算：

- $ 2^9 = 512 $
- $ 2^10 = 1024 $

因为 $ 512 < 1000 $，所以 9 个问题不足以区分 1000 种可能。

但 $ 1024 \geq 1000 $，所以 10 个问题足够。

因此，**最坏情况下，玛丽最多需要 10 个问题**。

---

### 第三步：验证是否可以做到 10 个问题

是的，通过二分查找策略：

- 第一次问：“这个数大于 500 吗？” → 缩小到 500 个数
- 第二次问：“大于 750 吗？” → 缩小到 250
- 依此类推，每次减半

经过 10 次这样的划分，可以唯一确定一个数。

即使最坏情况（比如每次都落在较大的一半），也只需要 10 次。

---

### 第四步：看选项

选项是：
- 0: 1,000
- 1: 999
- 2: 500
- 3: 10

正确答案是 **10**，对应选项编号 **3**

---

### 结论：

虽然有 1000 个数，但通过二分查找，只需 10 个是/否问题即可在最坏情况下确定。
</think>
<answer>3</answer>

【示例2】
问题：通常不被认为是水中有毒污染物的物质是?\n本题共有四个选项，依次编号为0、1、2、3。
["碳酸","卤代烃","铅","汞"]
思考过程使用<think>包裹,回答答案序号，使用<answer>包裹
<think>
我们来逐个分析选项中物质是否通常被认为是水中的有毒污染物：

0. 碳酸（H₂CO₃）：碳酸是二氧化碳溶于水后形成的弱酸，常见于自然水体和碳酸饮料中。它在正常浓度下对人体无毒，也不是典型的环境污染物。虽然大量存在可能影响水的pH值，但它本身不被视为有毒污染物。

1. 卤代烃：这是一类有机化合物，如氯仿、四氯化碳、多氯联苯（PCBs）等，许多卤代烃具有毒性、致癌性或难降解性，是公认的水中有机污染物。

2. 铅：重金属，具有强毒性，即使低浓度也会对神经系统造成损害，尤其是儿童。铅污染是饮用水安全的重要关注点，属于典型有毒污染物。

3. 汞：另一种剧毒重金属，尤其甲基汞可在食物链中富集，引起严重健康问题（如水俣病）。汞是公认的水中有毒污染物。

因此，在这四个选项中，只有“碳酸”通常不被认为是有毒污染物。
</think>
<answer>0</answer>

【示例3】
问题：以下哪种排序算法的平均情况和最坏情况运行时间为O（n log n）？\n本题共有四个选项，依次编号为0、1、2、3。
["冒泡排序","插入排序","归并排序","快速排序"]
思考过程使用<think>包裹,回答答案序号，使用<answer>包裹
<think>
我们来逐一分析每个排序算法的平均情况和最坏情况时间复杂度：

0. 冒泡排序：
- 平均情况：O(n²)
- 最坏情况：O(n²)
→ 不符合题目要求（需要 O(n log n)）

1. 插入排序：
- 平均情况：O(n²)
- 最坏情况下：O(n²)
→ 也不符合要求

2. 归并排序：
- 平均情况：O(n log n)
- 最坏情况：O(n log n)
→ 完全符合题目要求

3. 快速排序：
- 平均情况：O(n log n)
- 最坏情况：O(n²) （例如每次划分都极不平衡）
→ 不满足最坏情况为 O(n log n)

因此，只有归并排序在平均和最坏情况下都是 O(n log n)。
</think>
<answer>2</answer>
"""